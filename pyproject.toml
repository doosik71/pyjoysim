[project]
name = "pyjoysim"
version = "0.1.0"
description = "Joystick-based Python simulation platform for education and research"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "AI Research Team", email = "research@pyjoysim.org" }
]
keywords = ["simulation", "joystick", "education", "physics", "robotics"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Education",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Games/Entertainment :: Simulation",
]

dependencies = [
    "pygame>=2.6.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "pymunk>=6.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "black>=23.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
3d = [
    "pybullet>=3.2.5",
    "moderngl>=5.8.0",
    "trimesh>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/ai-research/pyjoysim"
Documentation = "https://pyjoysim.readthedocs.io"
Repository = "https://github.com/ai-research/pyjoysim.git"
Issues = "https://github.com/ai-research/pyjoysim/issues"

[project.scripts]
pyjoysim = "pyjoysim.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports
"tests/**/*.py" = ["S101"]  # assert statements

[tool.black]
target-version = ["py38"]
line-length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=pyjoysim",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
]

[tool.coverage.run]
source = ["pyjoysim"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
